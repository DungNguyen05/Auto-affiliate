import time
import sys
from pathlib import Path
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException

# Add root directory to path
sys.path.append(str(Path(__file__).parent.parent.parent))
from src.core.browser_manager import BrowserManager


class ThreadsPoster:
    """Ch·ªâ click n√∫t 'Post' tr√™n Threads"""

    def __init__(self, browser_manager):
        self.browser = browser_manager
        self.driver = browser_manager.driver

        if not self.driver:
            raise Exception("Browser ch∆∞a ƒë∆∞·ª£c kh·ªüi t·∫°o!")

    def post_threads(self):
        """M·ªü Threads v√† click n√∫t 'Post'"""
        print("\n" + "=" * 60)
        print("üß™ TEST CLICK POST BUTTON")
        print("=" * 60 + "\n")

        try:
            # 1. M·ªü trang Threads
            print("üìç B∆∞·ªõc 1: M·ªü Threads...")
            self.driver.get("https://www.threads.net/")  # ho·∫∑c .com t√πy qu·ªëc gia
            time.sleep(3)

            # 2. T√¨m v√† click n√∫t 'Post'
            print("üìç B∆∞·ªõc 2: T√¨m v√† click n√∫t 'Post'...")
            post_button = WebDriverWait(self.driver, 15).until(
                EC.element_to_be_clickable(
                    (By.XPATH, "//div[@role='button']//div[normalize-space(text())='Post']")
                )
            )

            post_button.click()
            print("‚úÖ ƒê√£ click v√†o n√∫t 'Post'!")

            # 3. Gi·ªØ tr√¨nh duy·ªát m·ªü ƒë·ªÉ b·∫°n quan s√°t
            print("\n‚è∏ Gi·ªØ tr√¨nh duy·ªát m·ªü, kh√¥ng ƒë√≥ng...")
            print("üëâ B·∫°n c√≥ th·ªÉ ki·ªÉm tra tr·∫°ng th√°i t·∫°i trang Threads.")
            while True:
                time.sleep(10)  # v√≤ng l·∫∑p gi·ªØ browser m·ªü

        except TimeoutException:
            print("‚ùå Kh√¥ng t√¨m th·∫•y n√∫t 'Post' trong th·ªùi gian ch·ªù.")
        except Exception as e:
            print(f"‚ùå L·ªói kh√¥ng x√°c ƒë·ªãnh: {e}")
            import traceback
            traceback.print_exc()


def test_click_post_only():
    """Ch·∫°y th·ª≠ ch·ª©c nƒÉng click n√∫t Post"""
    print("\n" + "=" * 60)
    print("üöÄ RUNNING TEST: Click n√∫t Post v√† d·ª´ng l·∫°i")
    print("=" * 60 + "\n")

    browser = BrowserManager(headless=False)

    try:
        browser.init_driver()
        poster = ThreadsPoster(browser)
        poster.post_threads()
    except Exception as e:
        print(f"‚ùå L·ªói: {e}")
        import traceback
        traceback.print_exc()


if __name__ == "__main__":
    test_click_post_only()
